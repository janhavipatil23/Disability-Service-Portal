/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Customer;

import Business.EcoSystem;
import Business.Organizations.HouseHoldOrganization;
import Business.Organizations.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HouseHoldWorkRequest;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author devikamujgule
 */
public class BookHouseHoldService extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem system;
    DefaultTableModel model;
    HouseHoldOrganization org;
    UserAccount userAccount;
    JSplitPane servicesSplitPane;
    HashMap services;
    Date date;
    Date date1;
    Double total = 0.0;
    /**
     * Creates new form BookHouseHoldService
     */
    public BookHouseHoldService(JPanel userProcessContainer, 
            EcoSystem business, 
            UserAccount userAccount,
            JSplitPane servicesSplitPane) {
        initComponents();
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.system = business;
        this.servicesSplitPane = servicesSplitPane;
        for (Organization organization : system.getNetwork().getEnterpriseDirectory().getEnterprise("HouseHold").getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof HouseHoldOrganization) {
                org = ((HouseHoldOrganization) organization);
                services = org.getServicesList();
                break;
            }
        }
        setCheckBoxes();
    }
    
    public void setCheckBoxes() {
        ArrayList<String> services = new ArrayList<String>();
        if (org.getServicesList().size() > 0) {
            for ( String key : org.getServicesList().keySet() ) {
                services.add(key);
            }
        }
        jCheckBox1.setText(services.get(0));        
        jCheckBox2.setText(services.get(1));
        jCheckBox3.setText(services.get(2));
        jCheckBox4.setText(services.get(3));
        jCheckBox5.setText(services.get(4));
        jCheckBox6.setText(services.get(5));
        jCheckBox7.setText(services.get(6));
    }
    
    public HashMap<String, String> setHashValues() {
        HashMap<String, String> hhService = new HashMap<String, String>();
        date = fromDateText.getDate();
         date1 = toDateText.getDate();
         
        long difference = Math.abs(date.getTime() - date1.getTime());
        long noOfDays = difference / (24 * 60 * 60 * 1000);
        if(jCheckBox1.isSelected()) {
            double get = (double) services.get(jCheckBox1.getText())*noOfDays;
            hhService.put(jCheckBox1.getText(), String.valueOf(get));
        }
        if (jCheckBox2.isSelected()) {
            double get = (double) services.get(jCheckBox2.getText())*noOfDays;
            hhService.put(jCheckBox2.getText(), String.valueOf(get));
        }
        if (jCheckBox3.isSelected()) {
            double get = (double) services.get(jCheckBox3.getText())*noOfDays;
            hhService.put(jCheckBox3.getText(), String.valueOf(get) );
        }
        if (jCheckBox4.isSelected()) {
            double get = (double) services.get(jCheckBox4.getText())*noOfDays;
            hhService.put(jCheckBox4.getText(), String.valueOf(get));
        }
        if (jCheckBox5.isSelected()) {
            double get = (double) services.get(jCheckBox5.getText())*noOfDays;
            hhService.put(jCheckBox5.getText(), String.valueOf(get));
        }
        if (jCheckBox6.isSelected()) {
            double get = (double) services.get(jCheckBox6.getText())*noOfDays;
            hhService.put(jCheckBox6.getText(), String.valueOf(get));
        }
        if (jCheckBox7.isSelected()) {
            double get = (double) services.get(jCheckBox7.getText())*noOfDays;
            hhService.put(jCheckBox7.getText(), String.valueOf(get));
        }
        return hhService;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeaderPanel = new javax.swing.JPanel();
        ImageHeader1 = new javax.swing.JLabel();
        Title1 = new javax.swing.JLabel();
        HouseHoldServicePanel = new javax.swing.JPanel();
        serviceCatLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        durationText = new javax.swing.JTextField();
        fromLabel = new javax.swing.JLabel();
        fromDateText = new com.toedter.calendar.JDateChooser();
        toLabel = new javax.swing.JLabel();
        toDateText = new com.toedter.calendar.JDateChooser();
        submitBtn = new javax.swing.JButton();
        serviceTitle = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField_totalPrice = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1254, 800));
        setSize(new java.awt.Dimension(1254, 800));

        HeaderPanel.setBackground(new java.awt.Color(110, 89, 222));
        HeaderPanel.setPreferredSize(new java.awt.Dimension(1254, 116));

        Title1.setFont(new java.awt.Font("STSong", 1, 62)); // NOI18N
        Title1.setForeground(new java.awt.Color(255, 255, 255));
        Title1.setText("ForYou");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addComponent(ImageHeader1)
                .addGap(20, 20, 20)
                .addComponent(Title1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ImageHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(Title1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        HouseHoldServicePanel.setBackground(new java.awt.Color(255, 255, 255));
        HouseHoldServicePanel.setPreferredSize(new java.awt.Dimension(1254, 401));
        HouseHoldServicePanel.setSize(new java.awt.Dimension(1254, 401));

        serviceCatLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        serviceCatLabel.setText("Choose a Category of Service");

        durationLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        durationLabel.setText("Time Duration in days");

        durationText.setEditable(false);
        durationText.setFont(new java.awt.Font("Palatino", 0, 14)); // NOI18N

        fromLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        fromLabel.setText("From");

        toLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        toLabel.setText("To");

        toDateText.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                toDateTextPropertyChange(evt);
            }
        });

        submitBtn.setBackground(new java.awt.Color(0, 0, 0));
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Add Service");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        serviceTitle.setFont(new java.awt.Font("Palatino", 1, 24)); // NOI18N
        serviceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        serviceTitle.setText("House Hold Chore Services");

        jCheckBox1.setText("jCheckBox1");

        jCheckBox2.setText("jCheckBox2");

        jCheckBox3.setText("jCheckBox3");

        jCheckBox4.setText("jCheckBox4");

        jCheckBox5.setText("jCheckBox5");

        jCheckBox6.setText("jCheckBox6");

        jCheckBox7.setText("jCheckBox7");

        jLabel1.setText("Total Cost ");

        jTextField_totalPrice.setEditable(false);
        jTextField_totalPrice.setFont(new java.awt.Font("Palatino", 0, 14)); // NOI18N

        javax.swing.GroupLayout HouseHoldServicePanelLayout = new javax.swing.GroupLayout(HouseHoldServicePanel);
        HouseHoldServicePanel.setLayout(HouseHoldServicePanelLayout);
        HouseHoldServicePanelLayout.setHorizontalGroup(
            HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serviceTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(HouseHoldServicePanelLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(serviceCatLabel)
                    .addComponent(fromLabel)
                    .addComponent(toLabel)
                    .addComponent(durationLabel))
                .addGap(18, 18, 18)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox7)
                    .addGroup(HouseHoldServicePanelLayout.createSequentialGroup()
                        .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox4))
                        .addGap(26, 26, 26)
                        .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HouseHoldServicePanelLayout.createSequentialGroup()
                                .addComponent(jCheckBox5)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox6))
                            .addGroup(HouseHoldServicePanelLayout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox3))))
                    .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField_totalPrice, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(submitBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(durationText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fromDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toDateText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                .addContainerGap(515, Short.MAX_VALUE))
        );
        HouseHoldServicePanelLayout.setVerticalGroup(
            HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HouseHoldServicePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(serviceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serviceCatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addGap(18, 18, 18)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox7)
                .addGap(24, 24, 24)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HouseHoldServicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addComponent(submitBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(HouseHoldServicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(HouseHoldServicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        
        if(jCheckBox1.isSelected() || jCheckBox2.isSelected() || jCheckBox3.isSelected() || jCheckBox4.isSelected() || jCheckBox5.isSelected() || jCheckBox6.isSelected() || jCheckBox7.isSelected()) {
            if (fromDateText.getDate() != null && toDateText.getDate() != null && !fromDateText.getDate().toString().isEmpty() && !toDateText.getDate().toString().isEmpty() && !durationText.getText().isEmpty()) {
            if (fromDateText.getDate().before(new Date()) || toDateText.getDate().before(new Date())) {
                JOptionPane.showMessageDialog(this, "START DATE SHOULD BE AFTER TODAYS DATE");
                return;
            }
            if (!fromDateText.getDate().before(toDateText.getDate())) {
                JOptionPane.showMessageDialog(this, "END DATE SHOULD BE AFTER START DATE");
                return;
            }
            try {
                int val = Integer.parseInt(durationText.getText());
                HouseHoldWorkRequest request = new HouseHoldWorkRequest();
                request.setServices(setHashValues());
                request.setMessage("Book house hold service");
                request.setSender(userAccount);
                request.setStatus("Sent");
                request.setFromDate(fromDateText.getDate());
                request.setToDate(toDateText.getDate());
                request.setNoOfDays(Integer.parseInt(durationText.getText()));
                request.setReqType(org.getName());
                request.setTotalPrice(Double.parseDouble(jTextField_totalPrice.getText()));
                jCheckBox1.setSelected(false);                
                jCheckBox2.setSelected(false);
                jCheckBox3.setSelected(false);
                jCheckBox4.setSelected(false);
                jCheckBox5.setSelected(false);
                jCheckBox6.setSelected(false);
                jCheckBox7.setSelected(false);
                fromDateText.setDate(null);
                toDateText.setDate(null);
                jTextField_totalPrice.setText("");
                durationText.setText("");
                if (org != null) {
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    org.getWorkQueue().getWorkRequestList().add(request);
//                    request.setId(org.getWorkQueue().getWorkRequestList().size());
                }
                JOptionPane.showMessageDialog(this, "SERVICE ADDED SUCCESSFULLY");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Input String cannot be parsed to Integer.");
            }
        }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE ENTER ALL DETAILS");
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void toDateTextPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_toDateTextPropertyChange
        // TODO add your handling code here:
        if(toDateText.getDate() != null && fromDateText.getDate()!=null){
         date = fromDateText.getDate();
         date1 = toDateText.getDate();
         
        long difference = Math.abs(date.getTime() - date1.getTime());
        long noOfDays = difference / (24 * 60 * 60 * 1000);
            HashMap<String, String> setHashValues = setHashValues();
            for(String val : setHashValues.values()){
                total += Double.parseDouble(val);
                System.out.println("cost house..."+total);
            }
        durationText.setText(String.valueOf(noOfDays));
        jTextField_totalPrice.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_toDateTextPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JPanel HouseHoldServicePanel;
    private javax.swing.JLabel ImageHeader1;
    private javax.swing.JLabel Title1;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JTextField durationText;
    private com.toedter.calendar.JDateChooser fromDateText;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField_totalPrice;
    private javax.swing.JLabel serviceCatLabel;
    private javax.swing.JLabel serviceTitle;
    private javax.swing.JButton submitBtn;
    private com.toedter.calendar.JDateChooser toDateText;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
